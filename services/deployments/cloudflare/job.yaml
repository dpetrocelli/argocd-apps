apiVersion: batch/v1
kind: Job
metadata:
  name: update-cloudflare-dns
  namespace: services-cert-manager
  annotations:
    argocd.argoproj.io/hook: PostSync
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: update-dns
        image: dpetrocelli/kubectl:18
        imagePullPolicy: Always 
        command: ["/bin/bash", "-c"]
        args:
        - |
          echo "DALE"
          echo "getting EXTERNAL IP FROM K8s TRAEFIK"
          # Fetch the external IP of the Traefik LoadBalancer service
          EXTERNAL_IP=$(kubectl get svc traefik-ingress -n services-traefik -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "EXTERNAL IP: $EXTERNAL_IP"


          if [ -z "$EXTERNAL_IP" ]; then
              echo "Failed to fetch external IP"
              exit 1
          fi

          echo "getting RECORDS from Cloudflare"
          # Fetch all A records from Cloudflare
          RECORDS_JSON=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records?type=A" \
            -H "Authorization: Bearer $CF_API_TOKEN" \
            -H "Content-Type: application/json")

          # Parse JSON to get individual records and update them with the new IP
          echo "$RECORDS_JSON" | jq -c '.result[] | {id, name, content}' | while read -r record; do
              RECORD_ID=$(echo $record | jq -r '.id')
              RECORD_NAME=$(echo $record | jq -r '.name')

              echo "Updating DNS record $RECORD_NAME with IP $EXTERNAL_IP"

              # Update the DNS record
              RESPONSE=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records/$RECORD_ID" \
                -H "Authorization: Bearer $CF_API_TOKEN" \
                -H "Content-Type: application/json" \
                --data '{
                  "type": "A",
                  "name": "'"$RECORD_NAME"'",
                  "content": "'"$EXTERNAL_IP"'",
                  "ttl": 1,
                  "proxied": false
                }')

              echo "Update response: $RESPONSE"
              SUCCESS=$(echo $RESPONSE | jq -r '.success')
              if [ "$SUCCESS" != "true" ]; then
                  echo "Failed to update DNS record $RECORD_NAME: $(echo $RESPONSE | jq -r '.errors[] .message')"
              fi
          done
        env:
        - name: CF_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflare-token-secret
              key: cloudflare-token
        - name: CF_ZONE_ID
          valueFrom:
            secretKeyRef:
              name: cloudflare-token-secret
              key: zone-id
